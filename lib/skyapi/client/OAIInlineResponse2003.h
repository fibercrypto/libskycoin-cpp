/**
 * Skycoin REST API.
 * Skycoin is a next-generation cryptocurrency.
 *
 * OpenAPI spec version: 0.25.1
 * Contact: contact@skycoin.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInline_response_200_3.h
 *
 * 
 */

#ifndef OAIInline_response_200_3_H
#define OAIInline_response_200_3_H

#include <QJsonObject>


#include "OAIInline_response_200_3_unconfirmed_verify_transaction.h"
#include <QString>

#include "OAIObject.h"

namespace skyqt {

class OAIInline_response_200_3: public OAIObject {
public:
    OAIInline_response_200_3();
    OAIInline_response_200_3(QString json);
    ~OAIInline_response_200_3() override;

    QString asJson () const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getLastReceived() const;
    void setLastReceived(const qint64 &last_received);

    qint64 getLastSent() const;
    void setLastSent(const qint64 &last_sent);

    bool isOutgoing() const;
    void setOutgoing(const bool &outgoing);

    qint32 getMirror() const;
    void setMirror(const qint32 &mirror);

    QString getAddress() const;
    void setAddress(const QString &address);

    qint32 getListenPort() const;
    void setListenPort(const qint32 &listen_port);

    bool isIsTrustedPeer() const;
    void setIsTrustedPeer(const bool &is_trusted_peer);

    qint64 getConnectedAt() const;
    void setConnectedAt(const qint64 &connected_at);

    OAIInline_response_200_3_unconfirmed_verify_transaction getUnconfirmedVerifyTransaction() const;
    void setUnconfirmedVerifyTransaction(const OAIInline_response_200_3_unconfirmed_verify_transaction &unconfirmed_verify_transaction);

    qint64 getId() const;
    void setId(const qint64 &id);

    QString getState() const;
    void setState(const QString &state);

    QString getUserAgent() const;
    void setUserAgent(const QString &user_agent);

    qint64 getHeight() const;
    void setHeight(const qint64 &height);

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void init();
    qint64 last_received;
    bool m_last_received_isSet;
    bool m_last_received_isValid;
    qint64 last_sent;
    bool m_last_sent_isSet;
    bool m_last_sent_isValid;
    bool outgoing;
    bool m_outgoing_isSet;
    bool m_outgoing_isValid;
    qint32 mirror;
    bool m_mirror_isSet;
    bool m_mirror_isValid;
    QString address;
    bool m_address_isSet;
    bool m_address_isValid;
    qint32 listen_port;
    bool m_listen_port_isSet;
    bool m_listen_port_isValid;
    bool is_trusted_peer;
    bool m_is_trusted_peer_isSet;
    bool m_is_trusted_peer_isValid;
    qint64 connected_at;
    bool m_connected_at_isSet;
    bool m_connected_at_isValid;
    OAIInline_response_200_3_unconfirmed_verify_transaction unconfirmed_verify_transaction;
    bool m_unconfirmed_verify_transaction_isSet;
    bool m_unconfirmed_verify_transaction_isValid;
    qint64 id;
    bool m_id_isSet;
    bool m_id_isValid;
    QString state;
    bool m_state_isSet;
    bool m_state_isValid;
    QString user_agent;
    bool m_user_agent_isSet;
    bool m_user_agent_isValid;
    qint64 height;
    bool m_height_isSet;
    bool m_height_isValid;
};

}

#endif // OAIInline_response_200_3_H
