/**
 * Skycoin REST API.
 * Skycoin is a next-generation cryptocurrency.
 *
 * OpenAPI spec version: 0.25.1
 * Contact: contact@skycoin.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAI_api_v1_wallet_transaction_wallet.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace skyqt {

OAI_api_v1_wallet_transaction_wallet::OAI_api_v1_wallet_transaction_wallet(QString json) {
    this->init();
    this->fromJson(json);
}

OAI_api_v1_wallet_transaction_wallet::OAI_api_v1_wallet_transaction_wallet() {
    this->init();
}

OAI_api_v1_wallet_transaction_wallet::~OAI_api_v1_wallet_transaction_wallet() {

}

void
OAI_api_v1_wallet_transaction_wallet::init() {
    m_unspents_isSet = false;
    m_unspents_isValid = false;
    m_addresses_isSet = false;
    m_addresses_isValid = false;
    m_password_isSet = false;
    m_password_isValid = false;
    m_id_isSet = false;
    m_id_isValid = false;
}

void
OAI_api_v1_wallet_transaction_wallet::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAI_api_v1_wallet_transaction_wallet::fromJsonObject(QJsonObject json) {
    
    m_unspents_isValid = ::skyqt::fromJsonValue(unspents, json[QString("unspents")]);
    
    m_addresses_isValid = ::skyqt::fromJsonValue(addresses, json[QString("addresses")]);
    m_password_isValid = ::skyqt::fromJsonValue(password, json[QString("password")]);
    
    m_id_isValid = ::skyqt::fromJsonValue(id, json[QString("id")]);
    
}

QString
OAI_api_v1_wallet_transaction_wallet::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAI_api_v1_wallet_transaction_wallet::asJsonObject() const {
    QJsonObject obj;
	
    if(unspents.size() > 0){
        obj.insert(QString("unspents"), ::skyqt::toJsonValue(unspents));
    } 
	
    if(addresses.size() > 0){
        obj.insert(QString("addresses"), ::skyqt::toJsonValue(addresses));
    } 
	if(m_password_isSet){
        obj.insert(QString("password"), ::skyqt::toJsonValue(password));
    }
	if(m_id_isSet){
        obj.insert(QString("id"), ::skyqt::toJsonValue(id));
    }
    return obj;
}

QList<QString>
OAI_api_v1_wallet_transaction_wallet::getUnspents() const {
    return unspents;
}
void
OAI_api_v1_wallet_transaction_wallet::setUnspents(const QList<QString> &unspents) {
    this->unspents = unspents;
    this->m_unspents_isSet = true;
}

QList<QString>
OAI_api_v1_wallet_transaction_wallet::getAddresses() const {
    return addresses;
}
void
OAI_api_v1_wallet_transaction_wallet::setAddresses(const QList<QString> &addresses) {
    this->addresses = addresses;
    this->m_addresses_isSet = true;
}

QString
OAI_api_v1_wallet_transaction_wallet::getPassword() const {
    return password;
}
void
OAI_api_v1_wallet_transaction_wallet::setPassword(const QString &password) {
    this->password = password;
    this->m_password_isSet = true;
}

QString
OAI_api_v1_wallet_transaction_wallet::getId() const {
    return id;
}
void
OAI_api_v1_wallet_transaction_wallet::setId(const QString &id) {
    this->id = id;
    this->m_id_isSet = true;
}

bool
OAI_api_v1_wallet_transaction_wallet::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(unspents.size() > 0){ isObjectUpdated = true; break;}
    
        if(addresses.size() > 0){ isObjectUpdated = true; break;}
    
        if(m_password_isSet){ isObjectUpdated = true; break;}
    
        if(m_id_isSet){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

bool
OAI_api_v1_wallet_transaction_wallet::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

}

