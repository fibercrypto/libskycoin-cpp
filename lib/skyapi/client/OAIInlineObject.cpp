/**
 * Skycoin REST API.
 * Skycoin is a next-generation cryptocurrency.
 *
 * OpenAPI spec version: 0.25.1
 * Contact: contact@skycoin.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIInline_object.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace skyqt {

OAIInline_object::OAIInline_object(QString json) {
    this->init();
    this->fromJson(json);
}

OAIInline_object::OAIInline_object() {
    this->init();
}

OAIInline_object::~OAIInline_object() {

}

void
OAIInline_object::init() {
    m_change_address_isSet = false;
    m_change_address_isValid = false;
    m_hours_selection_isSet = false;
    m_hours_selection_isValid = false;
    m_ignore_unconfirmed_isSet = false;
    m_ignore_unconfirmed_isValid = false;
    m_to_isSet = false;
    m_to_isValid = false;
    m_wallet_isSet = false;
    m_wallet_isValid = false;
}

void
OAIInline_object::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIInline_object::fromJsonObject(QJsonObject json) {
    m_change_address_isValid = ::skyqt::fromJsonValue(change_address, json[QString("change_address")]);
    
    m_hours_selection_isValid = ::skyqt::fromJsonValue(hours_selection, json[QString("hours_selection")]);
    
    m_ignore_unconfirmed_isValid = ::skyqt::fromJsonValue(ignore_unconfirmed, json[QString("ignore_unconfirmed")]);
    
    
    m_to_isValid = ::skyqt::fromJsonValue(to, json[QString("to")]);
    m_wallet_isValid = ::skyqt::fromJsonValue(wallet, json[QString("wallet")]);
    
}

QString
OAIInline_object::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIInline_object::asJsonObject() const {
    QJsonObject obj;
	if(m_change_address_isSet){
        obj.insert(QString("change_address"), ::skyqt::toJsonValue(change_address));
    }
	if(hours_selection.isSet()){
        obj.insert(QString("hours_selection"), ::skyqt::toJsonValue(hours_selection));
    }
	if(m_ignore_unconfirmed_isSet){
        obj.insert(QString("ignore_unconfirmed"), ::skyqt::toJsonValue(ignore_unconfirmed));
    }
	
    if(to.size() > 0){
        obj.insert(QString("to"), ::skyqt::toJsonValue(to));
    } 
	if(wallet.isSet()){
        obj.insert(QString("wallet"), ::skyqt::toJsonValue(wallet));
    }
    return obj;
}

QString
OAIInline_object::getChangeAddress() const {
    return change_address;
}
void
OAIInline_object::setChangeAddress(const QString &change_address) {
    this->change_address = change_address;
    this->m_change_address_isSet = true;
}

OAI_api_v1_wallet_transaction_hours_selection
OAIInline_object::getHoursSelection() const {
    return hours_selection;
}
void
OAIInline_object::setHoursSelection(const OAI_api_v1_wallet_transaction_hours_selection &hours_selection) {
    this->hours_selection = hours_selection;
    this->m_hours_selection_isSet = true;
}

bool
OAIInline_object::isIgnoreUnconfirmed() const {
    return ignore_unconfirmed;
}
void
OAIInline_object::setIgnoreUnconfirmed(const bool &ignore_unconfirmed) {
    this->ignore_unconfirmed = ignore_unconfirmed;
    this->m_ignore_unconfirmed_isSet = true;
}

QList<OAI_api_v1_wallet_transaction_to>
OAIInline_object::getTo() const {
    return to;
}
void
OAIInline_object::setTo(const QList<OAI_api_v1_wallet_transaction_to> &to) {
    this->to = to;
    this->m_to_isSet = true;
}

OAI_api_v1_wallet_transaction_wallet
OAIInline_object::getWallet() const {
    return wallet;
}
void
OAIInline_object::setWallet(const OAI_api_v1_wallet_transaction_wallet &wallet) {
    this->wallet = wallet;
    this->m_wallet_isSet = true;
}

bool
OAIInline_object::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(m_change_address_isSet){ isObjectUpdated = true; break;}
    
        if(hours_selection.isSet()){ isObjectUpdated = true; break;}
    
        if(m_ignore_unconfirmed_isSet){ isObjectUpdated = true; break;}
    
        if(to.size() > 0){ isObjectUpdated = true; break;}
    
        if(wallet.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

bool
OAIInline_object::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

}

