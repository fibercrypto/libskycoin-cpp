/**
 * Skycoin REST API.
 * Skycoin is a next-generation cryptocurrency.
 *
 * OpenAPI spec version: 0.25.1
 * Contact: contact@skycoin.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAI_api_v1_wallets_entries.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace skyqt {

OAI_api_v1_wallets_entries::OAI_api_v1_wallets_entries(QString json) {
    this->init();
    this->fromJson(json);
}

OAI_api_v1_wallets_entries::OAI_api_v1_wallets_entries() {
    this->init();
}

OAI_api_v1_wallets_entries::~OAI_api_v1_wallets_entries() {

}

void
OAI_api_v1_wallets_entries::init() {
    m_public_key_isSet = false;
    m_public_key_isValid = false;
    m_address_isSet = false;
    m_address_isValid = false;
}

void
OAI_api_v1_wallets_entries::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAI_api_v1_wallets_entries::fromJsonObject(QJsonObject json) {
    m_public_key_isValid = ::skyqt::fromJsonValue(public_key, json[QString("public_key")]);
    
    m_address_isValid = ::skyqt::fromJsonValue(address, json[QString("address")]);
    
}

QString
OAI_api_v1_wallets_entries::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAI_api_v1_wallets_entries::asJsonObject() const {
    QJsonObject obj;
	if(m_public_key_isSet){
        obj.insert(QString("public_key"), ::skyqt::toJsonValue(public_key));
    }
	if(m_address_isSet){
        obj.insert(QString("address"), ::skyqt::toJsonValue(address));
    }
    return obj;
}

QString
OAI_api_v1_wallets_entries::getPublicKey() const {
    return public_key;
}
void
OAI_api_v1_wallets_entries::setPublicKey(const QString &public_key) {
    this->public_key = public_key;
    this->m_public_key_isSet = true;
}

QString
OAI_api_v1_wallets_entries::getAddress() const {
    return address;
}
void
OAI_api_v1_wallets_entries::setAddress(const QString &address) {
    this->address = address;
    this->m_address_isSet = true;
}

bool
OAI_api_v1_wallets_entries::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(m_public_key_isSet){ isObjectUpdated = true; break;}
    
        if(m_address_isSet){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

bool
OAI_api_v1_wallets_entries::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

}

