/**
 * Skycoin REST API.
 * Skycoin is a next-generation cryptocurrency.
 *
 * OpenAPI spec version: 0.25.1
 * Contact: contact@skycoin.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIInline_response_200_1.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace skyqt {

OAIInline_response_200_1::OAIInline_response_200_1(QString json) {
    this->init();
    this->fromJson(json);
}

OAIInline_response_200_1::OAIInline_response_200_1() {
    this->init();
}

OAIInline_response_200_1::~OAIInline_response_200_1() {

}

void
OAIInline_response_200_1::init() {
    m_csrf_token_isSet = false;
    m_csrf_token_isValid = false;
}

void
OAIInline_response_200_1::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIInline_response_200_1::fromJsonObject(QJsonObject json) {
    m_csrf_token_isValid = ::skyqt::fromJsonValue(csrf_token, json[QString("csrf_token")]);
    
}

QString
OAIInline_response_200_1::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIInline_response_200_1::asJsonObject() const {
    QJsonObject obj;
	if(m_csrf_token_isSet){
        obj.insert(QString("csrf_token"), ::skyqt::toJsonValue(csrf_token));
    }
    return obj;
}

QString
OAIInline_response_200_1::getCsrfToken() const {
    return csrf_token;
}
void
OAIInline_response_200_1::setCsrfToken(const QString &csrf_token) {
    this->csrf_token = csrf_token;
    this->m_csrf_token_isSet = true;
}

bool
OAIInline_response_200_1::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(m_csrf_token_isSet){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

bool
OAIInline_response_200_1::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

}

